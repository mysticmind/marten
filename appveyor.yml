# set version as running build number for CI build use
version: Build {build}

configuration: Release

os: Visual Studio 2019

environment:
  config: Release
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  marten_testing_database: "Host=localhost;Port=5432;Database=marten_testing;Username=postgres;Password=Password12!"
  POSTGRES_PATH: C:\Program Files\PostgreSQL\10
  PG_PLV8_EXTENSION_ZIP_FILENAME: pg10plv8jsbin_w64
  PG_DB: marten_testing
  NUGET_DEPLOY_KEY:
    secure: Gen0aL67BVG35jLDmWxTDYcudewjb0MsWQz6Kqv4CGjl2OdlqXWAbUo9BJhnn9AR

services:
  - postgresql101

install:
  - SET PATH=%POSTGRES_PATH%\bin;%PATH%
  - curl -L -O -S -s http://www.postgresonline.com/downloads/%PG_PLV8_EXTENSION_ZIP_FILENAME%.zip
  - 7z x %PG_PLV8_EXTENSION_ZIP_FILENAME%.zip
  - xcopy /s /y /d %PG_PLV8_EXTENSION_ZIP_FILENAME% "%POSTGRES_PATH%\"

before_build:
  - SET PGUSER=postgres
  - SET PGPASSWORD=Password12!
  - createdb %PG_DB%
  - psql -d %PG_DB% -c "create extension if not exists plv8;"
  - npm install
  - dotnet --info

build_script:
- cmd: >-
    dotnet run -p martenbuild.csproj -- ci
test: off

artifacts:
  - path: '**\Marten.*.*nupkg' # find all NuGet packages recursively

deploy:
  provider: NuGet
  api_key: $(NUGET_DEPLOY_KEY)
  artifact: /.*\.nupkg/
  on:
    APPVEYOR_REPO_TAG: true

# workaround to publish snupkg to NuGet (appveyor is yet to support publishing snupkg)
after_deploy:
  - ps: Get-ChildItem -Path *.snupkg -Recurse | % { dotnet nuget push $_.FullName -s https://api.nuget.org/v3/index.json -k $env:NUGET_DEPLOY_KEY }
